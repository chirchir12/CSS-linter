flow of the game part 1: checkign errors
1. run linter file.css
2. check every line of the file for errors
3. print all errors

flow of the game part 2: fixing errors
 1. run linter --fix file.css
 2. read line by line
 3. replace errors with required style

UI design 
1. read terminal variables
2. check if user passed the file
a. pass the file to errorchecker
b. display errors

3. check if user passed --fix
a. pass the file to errorFixer 
b print fixed errors



Part 1
1. functionality to loop through each line of the file
2. functionality to operate on each line (check all types of errors)
3. functionality to store errors array
4. functionality to print each error 
5. functionality to find each line of code where error occured
6. functionality to check file extension


classes
1. ErrorChecker receive filedata in form of array
2. ErrorFixer receives filedata in form of array

errors to be check on each line